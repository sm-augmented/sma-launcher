<Window x:Class="SMClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:loadin="clr-namespace:LoadingIndicators.WPF;assembly=LoadingIndicators.WPF"
        xmlns:local="clr-namespace:SMClient"
        xmlns:Controls="clr-namespace:SMClient.Controls"
        xmlns:launcherwindow="clr-namespace:SMClient.Controls.LauncherWindow"
        x:Name="root" Title="Space Marine Augmented Launcher" Height="720" Width="1280"
        ResizeMode="CanMinimize" AllowsTransparency="true" WindowStyle="None" Background="Transparent">
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingArcsRing.xaml"/>
      </ResourceDictionary.MergedDictionaries>
      <Image x:Key="SettingsImage" Source="Resources/Settings.png"/>
      <Image x:Key="BranchesImage" Source="Resources/BranchesSelect.png"/>
      <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Background">
          <Setter.Value>
            <ImageBrush ImageSource="/SMClient;component/Resources/Checkbox.png"/>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="ToggleButton.IsChecked" Value="True">
            <Setter Property="Control.Background">
              <Setter.Value>
                <ImageBrush ImageSource="/SMClient;component/Resources/Checkbox_on.png"/>
              </Setter.Value>
            </Setter>
          </Trigger>
        </Style.Triggers>
      </Style>
      <SolidColorBrush x:Key="StandardBorderBrush" Color="#888"/>
      <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black"/>
      <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD"/>
      <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray"/>
      <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White"/>
      <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
      <SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
      <SolidColorBrush x:Key="NormalBrush" Color="#888"/>
      <SolidColorBrush x:Key="NormalBorderBrush" Color="#888"/>
      <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868"/>
      <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888"/>
      <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="White" Offset="0.0"/>
            <GradientStop Color="White" Offset="0.6"/>
            <GradientStop Color="#DDDDDD" Offset="1.2"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#FFF" Offset="0.0"/>
            <GradientStop Color="#CCC" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#BBB" Offset="0.0"/>
            <GradientStop Color="#EEE" Offset="0.1"/>
            <GradientStop Color="#EEE" Offset="0.9"/>
            <GradientStop Color="#FFF" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>
      <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="UIElement.Visibility" Value="Hidden"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RepeatButton}">
              <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}"
                      BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}"
                      Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="ButtonBase.IsPressed" Value="true">
                  <Setter TargetName="Border" Value="{StaticResource PressedBrush}" Property="Border.Background"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Value="{StaticResource DisabledForegroundBrush}" Property="Control.Foreground"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="UIElement.Visibility" Value="Hidden"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RepeatButton}">
              <Border Background="Black"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
              <Border CornerRadius="4" Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" Width="8" Margin="8,0,-2,0"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition MaxHeight="0"/>
            <RowDefinition Height="0.00001*"/>
            <RowDefinition MaxHeight="0"/>
          </Grid.RowDefinitions>
          <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent"/>
          <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18"
                        Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z"/>
          <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
            <Track.DecreaseRepeatButton>
              <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
              <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0"
                     Background="{StaticResource HorizontalNormalBrush}"
                     BorderBrush="{StaticResource HorizontalNormalBorderBrush}"/>
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
              <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
            </Track.IncreaseRepeatButton>
          </Track>
          <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18"
                        Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
      </ControlTemplate>
      <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="18"/>
            <ColumnDefinition Width="0.00001*"/>
            <ColumnDefinition MaxWidth="18"/>
          </Grid.ColumnDefinitions>
          <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
          <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18"
                        Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z"/>
          <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="false">
            <Track.DecreaseRepeatButton>
              <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
              <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}"
                     BorderBrush="{StaticResource NormalBorderBrush}"/>
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
              <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
            </Track.IncreaseRepeatButton>
          </Track>
          <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18"
                        Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
      </ControlTemplate>
      <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
          <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
            <Setter Property="FrameworkElement.Width" Value="Auto"/>
            <Setter Property="FrameworkElement.Height" Value="18"/>
            <Setter Property="Control.Template" Value="{StaticResource HorizontalScrollBar}"/>
          </Trigger>
          <Trigger Property="ScrollBar.Orientation" Value="Vertical">
            <Setter Property="FrameworkElement.Width" Value="18"/>
            <Setter Property="FrameworkElement.Height" Value="Auto"/>
            <Setter Property="Control.Template" Value="{StaticResource VerticalScrollBar}"/>
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollViewer}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollContentPresenter Grid.Column="1"/>
                <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding ScrollViewer.VerticalOffset}"
                           Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                           ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                           Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"/>
                <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1"
                           Value="{TemplateBinding ScrollViewer.HorizontalOffset}"
                           Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                           ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                           Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"/>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <Grid MouseLeftButtonDown="Grid_MouseDown">
    <launcherwindow:WelcomeScreen x:Name="nonAuthorized" MouseLeftButtonDown="Grid_MouseDown" Visibility="Visible"
                                  Background="Transparent"/>
    <launcherwindow:MainScreen x:Name="authorized" Visibility="Hidden" Background="Transparent"/>
    <Image Source="Resources/Background_empty.png" IsHitTestVisible="false"/>
    <Image Height="31" VerticalAlignment="Top" HorizontalAlignment="Center" Width="200"
           Source="/SMClient;component/Resources/Decor1.png"/>
    <Image Height="31" Visibility="Collapsed" VerticalAlignment="Bottom" HorizontalAlignment="Center"
           Width="201" Source="/SMClient;component/Resources/Decor3.png" Margin="540,0,539,10"/>
    <Label MouseEnter="btnClose_MouseEnter" MouseLeave="btnClose_MouseLeave"
           MouseLeftButtonUp="btnClose_MouseLeftButtonUp" MouseDown="NotGrid_MouseDown" x:Name="btnClose"
           Content="X" HorizontalAlignment="Left" Margin="1213,26,0,0" VerticalAlignment="Top"
           Foreground="Red" Height="38" Width="43" HorizontalContentAlignment="Center" FontSize="30"
           FontWeight="Bold" ScrollViewer.VerticalScrollBarVisibility="Disabled" Padding="0"
           Background="#00000000"/>
    <Label MouseEnter="btnMinimize_MouseEnter" MouseLeave="btnMinimize_MouseLeave"
           MouseLeftButtonUp="btnMinimize_MouseLeftButtonUp" MouseDown="NotGrid_MouseDown"
           x:Name="btnMinimize" Content="—" HorizontalAlignment="Left" Margin="1171,26,0,0"
           VerticalAlignment="Top" Foreground="White" Height="38" Width="42"
           HorizontalContentAlignment="Center" FontSize="30"
           ScrollViewer.VerticalScrollBarVisibility="Disabled" Padding="0,5,0,0" FontWeight="Bold"
           FontFamily="Segoe UI Black" VerticalContentAlignment="Center"/>
    <loadin:LoadingIndicator x:Name="loadingIndicator" SpeedRatio="1" IsActive="false"
                             Style="{DynamicResource LoadingIndicatorArcsRingStyle}" Foreground="#FFFFB900"
                             HorizontalAlignment="Center" VerticalAlignment="Center" Width="40" Height="40"
                             Margin="579,303,661,377">
      <UIElement.RenderTransform>
        <ScaleTransform ScaleX="3" ScaleY="3"/>
      </UIElement.RenderTransform>
    </loadin:LoadingIndicator>
    <Label x:Name="loadingIndicatorLabel" HorizontalAlignment="Center" Visibility="Collapsed"
           VerticalAlignment="Center" Margin="540,434,539,252" Width="201" Foreground="White"
           HorizontalContentAlignment="Center" FontSize="16" Height="34">Data loading...</Label>
  </Grid>
</Window>